on:
  push:
    tags:
      - 'v*'

name: Create Release
env:
  CUSTOM_IMAGE_NAME: misogihagi_raspberrypi
  CUSTOM_IMAGE_ISO: ubuntu-misogihagi-20.04.3-desktop-amd64.iso
jobs:
  build:
    name: Create Artifact
    runs-on: ubuntu-latest
    steps:
      - name: pigen
        run: |
          sudo apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip \
            dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc \
            gpg pigz xxd arch-test
          git clone https://github.com/RPI-Distro/pi-gen.git
          cd pi-gen
          echo IMG_NAME=misogihagi-raspberrypi >> config
          echo ARCHIVE_FILENAME=misogihagi-raspberrypi >> config
          echo LOCALE_DEFAULT=en_US.UTF-8 >> config
          echo TARGET_HOSTNAME=raspberrypi4 >> config
          echo KEYBOARD_KEYMAP=us >> config
          echo TIMEZONE_DEFAULT=America/Los_Angeles >> config
          echo ENABLE_SSH=1 >> config
          echo PUBKEY_SSH_FIRST_USER= >> config
          echo curl >> stage3/00-packages
          sudo rm -rf stage4 && mkdir stage4 && touch stage4/SKIP
          sudo rm -rf stage5 && mkdir stage5 && touch stage5/SKIP
          ./build-docker.sh -c config
          ls deploy

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ./deploy/misogihagi-raspberrypi.zip
          asset_name: misogihagi-raspberrypi.zip
          asset_content_type: application/zip
